{"version":3,"sources":["./src/app/models/Course.ts","./src/app/services/course-services.service.ts","./src/app/components/courses/courses.component.ts","./src/app/components/courses/courses.component.html","./src/environments/environment.ts","./src/app/components/course/course.component.ts","./src/app/components/course/course.component.html","./src/app/services/http-generic.service.ts","./src/app/services/store.service.ts","./src/app/components/course/adicionar-alunos/adicionar-alunos.component.ts","./src/app/components/course/adicionar-alunos/adicionar-alunos.component.html","./src/app/startup/app-routing.module.ts","./src/app/components/course/chamada/chamada.component.ts","./src/app/components/course/chamada/chamada.component.html","./src/app/startup/app.module.ts","./src/$_lazy_route_resource lazy namespace object","./src/app/components/teste/teste.component.ts","./src/app/components/teste/teste.component.html","./src/app/components/nova-course/nova-course.component.ts","./src/app/components/nova-course/nova-course.component.html","./src/app/services/messenger.service.ts","./src/app/components/course/alunos/alunos.component.ts","./src/app/components/course/alunos/alunos.component.html","./src/app/components/course/chamadas/chamadas.component.ts","./src/app/components/course/chamadas/chamadas.component.html","./src/app/startup/app.component.ts","./src/app/startup/app.component.html","./src/app/models/Aluno.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["import { Aluno } from './Aluno';\r\n\r\nexport class Course {\r\n  id: string;\r\n  nome: string;\r\n  alunos = new Array<Aluno>();\r\n}\r\n","import { Injectable } from '@angular/core';\n// import { Apollo, QueryRef } from 'apollo-angular';\n// import gql from 'graphql-tag';\nimport { Course } from '../models/Course';\nimport { map } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\n// import { GraphService } from './graph.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CourseService {\n\n  // defaultFields = ;\n\n  constructor(\n    // private _apollo: Apollo,\n    // private _graphqlService: GraphService\n    ) {\n  }\n\n\n  courses(fields = '{ id nome detalhes }'): Observable<Course[]> {\n    return null;\n    // return this._graphqlService.executeQuery(gql`{ courses ${fields} }`)\n    //   .pipe(map(result => result.data.courses));\n  }\n\n\n\n\n  course(id: string, fields = ''): Observable<Course> {\n\n    if (fields === '') {\n      fields = `\n      {\n        id\n        nome\n        detalhes\n        alunos {\n          id\n          nome\n          email\n        }\n      }\n    `;\n    }\n\n    return null;\n    // return this._graphqlService.executeQuery(gql`{ course(id: \"${id}\") ${fields} }`)\n    //   .pipe(map(result => result.data.course));\n  }\n\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { ThemePalette } from '@angular/material/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { HttpGenericService } from 'src/app/services/http-generic.service';\nimport { MessengerService } from 'src/app/services/messenger.service';\nimport { StoreService } from 'src/app/services/store.service';\nimport { Router } from '@angular/router';\nimport { Course } from 'src/app/models/Course';\nimport { CourseService } from 'src/app/services/course-services.service';\n\n@Component({\n  selector: 'app-courses',\n  templateUrl: './courses.component.html',\n  styleUrls: ['./courses.component.css']\n})\nexport class CoursesComponent implements OnInit {\n\n  courses = new Array<Course>();\n\n  constructor(\n    private _httpService: HttpGenericService,\n    private _store: StoreService,\n    private _router: Router,\n    private _messenger: MessengerService,\n    private _courseService: CourseService) { }\n\n  ngOnInit() {\n    // this._httpService.initialize('course');\n    // this._httpService.list().subscribe(\n    //   coursesResponse => this.courses = coursesResponse,\n    //   error => this._messenger.show('ops! ocorreu algum erro ao buscar as courses')\n    // );\n\n    this._courseService.courses().subscribe(result => {\n      this.courses = result;\n    });\n  }\n\n  selecionarCourse(course: Course) {\n    console.log('course', course.id, course.nome);\n\n    this._courseService.course(course.id).subscribe(\n      result => {\n        this._store.course = result;\n        console.log('vou navegar');\n        this._router.navigate([`/courses/${course.nome}`]);\n      },\n      erro => this._messenger.show('ops! ocorreu um erro ao buscar a course')\n    );\n\n    // this._httpService.getOne(course.id).subscribe(\n    //   responseCourse => { this._store.course = responseCourse; console.log('response', responseCourse); },\n    //   erro => this._messenger.show('ops! ocorreu um erro ao buscar a course'),\n    //   () => this._router.navigate([`/courses/${course.nome}`])\n    // );\n  }\n\n}\n","<mat-toolbar color=\"primary\">\n  <mat-toolbar-row>\n    <span>Courses</span>\n    <span class=\"flex-spacer\"></span>\n    <!-- <button mat-icon-button aria-label=\"Buscar menus\">\n      <mat-icon>search</mat-icon>\n    </button> -->\n    <button mat-icon-button aria-label=\"Example icon-button with a menu\">\n      <!-- <mat-icon>more_vert</mat-icon> -->\n    </button>\n  </mat-toolbar-row>\n</mat-toolbar>\n<mat-nav-list class=\"no-padding\" *ngFor=\"let course of courses\">\n  <mat-list-item (click)=\"selecionarCourse(course)\">{{course.nome}}</mat-list-item>\n  <!-- <mat-divider></mat-divider> -->\n</mat-nav-list>\n\n\n<a [routerLink]=\"['/nova-course']\" class=\"btn-float\" mat-fab aria-label=\"Example icon-button with a heart icon\">\n  <mat-icon>add</mat-icon>\n</a>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  API: {\n    url: 'https://localhost:44323/api'\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { FloatLabelType } from '@angular/material/core';\nimport { HttpGenericService } from 'src/app/services/http-generic.service';\nimport { Course } from 'src/app/models/Course';\nimport { MessengerService } from 'src/app/services/messenger.service';\nimport { Aluno } from 'src/app/models/Aluno';\nimport { StoreService } from 'src/app/services/store.service';\nimport { CourseService } from 'src/app/services/course-services.service';\n\n@Component({\n  selector: 'app-course',\n  templateUrl: './course.component.html',\n  styleUrls: ['./course.component.scss']\n})\nexport class CourseComponent implements OnInit {\n  isLinear = false;\n  panelOpenState = false;\n  formGroupAdicionar: FormGroup;\n  course = new Course();\n\n  constructor(\n    private _route: ActivatedRoute,\n    private _httpService: HttpGenericService,\n    private _storeService: StoreService,\n    private _messenger: MessengerService,\n    private _courseService: CourseService) { }\n\n  ngOnInit() {\n    // const courseId = this._route.snapshot.paramMap.get('id');\n    // this._httpService.initialize('course');\n    this.course = this._storeService.course;\n    // this._httpService.getOne(courseId).subscribe(\n    //   courseResponse => {\n    //     this.course = courseResponse as Course;\n    //     console.log('course', this._storeService.course);\n    //   },\n    //   error => this._messenger.show('ops! ocorreu algum erro ao buscar a course'));\n\n    // this._courseService.course(courseId).subscribe(result => this.course = result);\n  }\n\n  adicionarAlunoNaLista(aluno: Aluno) {\n    this.course.alunos.push(aluno);\n    this._storeService.course = this.course;\n  }\n\n}\n","<mat-toolbar class=\"toolbar\" color=\"primary\">\n  <a [routerLink]=\"['/courses']\" mat-icon-button aria-label=\"Example icon-button with a menu\">\n    <mat-icon>arrow_back</mat-icon>\n  </a>\n  <span>{{course.nome}}</span>\n  <span class=\"flex-spacer\"></span>\n  <!-- <button mat-icon-button aria-label=\"Buscar menus\">\n        <mat-icon>search</mat-icon>\n      </button> -->\n  <button mat-icon-button aria-label=\"Example icon-button with a menu\">\n    <mat-icon>more_vert</mat-icon>\n  </button>\n</mat-toolbar>\n<mat-tab-group class=\"tab-toolbar\" backgroundColor=\"primary\">\n  <mat-tab label=\"Chamada\">\n    <app-chamadas></app-chamadas>\n  </mat-tab>\n  <mat-tab label=\"Alunos\">\n    <app-alunos [alunos]=\"course.alunos\" ></app-alunos>\n  </mat-tab>\n  <mat-tab label=\"Adicionar\">\n    <app-adicionar-alunos [courseId]=\"course.nome\" (adicionarAlunoNaLista)=\"adicionarAlunoNaLista($event)\">\n    </app-adicionar-alunos>\n  </mat-tab>\n</mat-tab-group>\n","import { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map, first } from 'rxjs/operators';\nimport { ApiResponse } from '../models/ApiResponse';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpGenericService {\n\n  private initialized = false;\n  private url = `${environment.API.url}`;\n  private urlPath = '';\n  private urlCombined = '';\n\n  constructor(private httpClient: HttpClient) { }\n\n  initialize(path: string){\n    this.urlPath = path;\n    this.urlCombined = `${this.url}/${this.urlPath}`;\n    this.initialized = true;\n  }\n\n  getOne(id: string): Observable<any> {\n    if (!this.initialized) { return; }\n    return this.httpClient.get(`${this.urlCombined}/${id}`)\n      .pipe(\n        map<ApiResponse, any>(response => response.data)\n      );\n  }\n\n  list(): Observable<any[]> {\n    if (!this.initialized) { return; }\n    return this.httpClient.get(this.urlCombined)\n      .pipe(\n        map<ApiResponse, any[]>(response => response.data)\n      );\n  }\n\n  create(obj: any): Observable<ApiResponse> {\n    if (!this.initialized) { return; }\n    return this.httpClient.post<ApiResponse>(this.urlCombined, obj);\n  }\n\n  update(id: string, obj: any): Observable<ApiResponse> {\n    if (!this.initialized) { return; }\n    return this.httpClient.put<ApiResponse>(`${this.urlCombined}/${id}`, obj);\n  }\n\n  delete(id: string): Observable<ApiResponse> {\n    if (!this.initialized) { return; }\n    return this.httpClient.delete<any>(`${this.urlCombined}/${id}`);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Course } from '../models/Course';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StoreService {\n\n  constructor() { }\n\n  get course(): Course {\n    return this.getObject('current-course') as Course;\n  }\n\n  set course(course: Course) {\n    this.addObject('current-course', course);\n  }\n\n  private addObject(local: string, objeto: any) {\n    localStorage.setItem(local, JSON.stringify(objeto));\n  }\n\n  private getObject(local: string): any {\n    return JSON.parse(localStorage.getItem(local));\n  }\n}\n","import { Component, OnInit, Output, AfterViewChecked, EventEmitter, AfterViewInit, Input } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { MessengerService } from 'src/app/services/messenger.service';\nimport { HttpGenericService } from 'src/app/services/http-generic.service';\nimport { Aluno } from 'src/app/models/Aluno';\nimport { StoreService } from 'src/app/services/store.service';\n\n@Component({\n  selector: 'app-adicionar-alunos',\n  templateUrl: './adicionar-alunos.component.html',\n  styleUrls: ['./adicionar-alunos.component.css']\n})\nexport class AdicionarAlunosComponent implements OnInit {\n\n  @Input('courseId')\n  set courseId(courseId: string) {\n    console.log('courseId', courseId);\n    this.aluno = new Aluno();\n  }\n\n  @Output() adicionarAlunoNaLista = new EventEmitter();\n\n  submitted = false;\n  aluno = new Aluno();\n\n  constructor(\n    private _httpService: HttpGenericService,\n    private _storeService: StoreService,\n    private _messenger: MessengerService) { }\n\n  ngOnInit() {\n    this._httpService.initialize('aluno');\n    this.aluno = new Aluno();\n  }\n\n  onSubmit(form: NgForm) {\n    this.submitted = true;\n\n    if (form.invalid) {\n      return;\n    }\n\n    this._httpService.create(this.aluno).subscribe(\n      response => {\n        if (response.success) {\n          this._messenger.show(`Aluno(a) ${this.aluno.nome} adicionado a course!`);\n          this.adicionarAlunoNaLista.emit(response.data as Aluno);\n        }\n      },\n      error => this._messenger.show('ops! ocorreu algum erro ao tentar adicionar o aluno.'),\n      () => form.resetForm()\n    );\n  }\n\n  habilitarLink(checked: boolean) {\n    if (checked) {\n      this._messenger.show('Link copiado e habilitado para compartilhamento. O link é acessível somente enquanto habilitado');\n    }\n  }\n}\n","<div class=\"content\">\n  <form #f=\"ngForm\" (ngSubmit)=\"onSubmit(f)\">\n    <mat-slide-toggle #slider (change)=\"habilitarLink(slider.checked)\">Habilitar e copiar link!</mat-slide-toggle>\n    <mat-form-field>\n      <!-- <mat-label>Link de cadastro do aluno</mat-label> -->\n      <input matInput matTooltip=\"Copiar\" value=\"http://chamada.com.br/354/courses/158\" readonly>\n      <!-- <button mat-raised-button>\n          <mat-icon matTooltip=\"Copiar\" [matTooltipPosition]=\"before\" matRipple matSuffix color=\"primary\">file_copy\n          </mat-icon>\n        </button> -->\n      <!-- <button matSuffix mat-raised-button  color=\"primary\">Copiar</button> -->\n    </mat-form-field>\n    <span class=\"mat-caption\">\n      Compartilhe este link com seus alunos para que eles se auto cadastrem na sua course.\n      É simples e rápido! (não requer login) <br>\n    </span>\n    <br>\n    <section>\n      <span class=\"mat-caption\">\n        Ou você mesmo pode cadastra-lo(a):<br>\n      </span>\n    </section>\n    <mat-form-field>\n      <mat-label>Nome do aluno(a)</mat-label>\n      <input matInput [(ngModel)]=\"aluno.nome\" name=\"nomeAluno\" required>\n    </mat-form-field>\n    <mat-form-field>\n      <mat-label>Apelido</mat-label>\n      <input matInput [(ngModel)]=\"aluno.apelido\" name=\"apelido\">\n    </mat-form-field>\n    <mat-radio-group [(ngModel)]=\"aluno.sexo\" name=\"sexo\" aria-label=\"Sexo\">\n      <mat-radio-button name=\"sexo\" value=\"Masculino\">Masculino</mat-radio-button>\n      <mat-radio-button name=\"sexo\" value=\"Feminino\">Feminino</mat-radio-button>\n    </mat-radio-group>\n    <div class=\"flex\">\n      <button mat-raised-button matRipple color=\"primary\" type=\"submit\">Adicionar</button>\n      <span class=\"flex-spacer\"></span>\n    </div>\n  </form>\n</div>\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { CoursesComponent } from '../components/courses/courses.component';\r\nimport { CourseComponent } from '../components/course/course.component';\r\nimport { NovaCourseComponent } from '../components/nova-course/nova-course.component';\r\nimport { AppComponent } from './app.component';\r\nimport { ChamadaComponent } from '../components/course/chamada/chamada.component';\r\nimport { TesteComponent } from '../components/teste/teste.component';\r\n\r\nconst routes: Routes = [\r\n  // Site routes goes here\r\n  {\r\n    path: '', component: AppComponent,\r\n    children: [\r\n      { path: 'courses', component: CoursesComponent },\r\n      { path: 'nova-course', component: NovaCourseComponent },\r\n      { path: 'courses/:nome', component: CourseComponent },\r\n      { path: 'courses/:nome/chamada', component: ChamadaComponent }\r\n    ]\r\n  },\r\n  { path: '**', redirectTo: '' }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\nimport { HttpGenericService } from 'src/app/services/http-generic.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { MessengerService } from 'src/app/services/messenger.service';\nimport { Course } from 'src/app/models/Course';\nimport { StoreService } from 'src/app/services/store.service';\n\n@Component({\n  selector: 'app-chamada',\n  templateUrl: './chamada.component.html',\n  styleUrls: ['./chamada.component.css']\n})\nexport class ChamadaComponent implements OnInit {\n\n  course: Course;\n\n  constructor(\n    private _route: ActivatedRoute,\n    private _httpService: HttpGenericService,\n    private _storeService: StoreService,\n    private _messenger: MessengerService) { }\n\n  ngOnInit() {\n    this.course = this._storeService.course;\n  }\n\n}\n","<mat-toolbar class=\"toolbar\" color=\"primary\">\n  <a [routerLink]=\"['/course']\" mat-icon-button aria-label=\"Example icon-button with a menu\">\n    <mat-icon>arrow_back</mat-icon>\n  </a>\n  <span>Course A</span>\n  <span class=\"flex-spacer\"></span>\n  <!-- <button mat-icon-button aria-label=\"Buscar menus\">\n          <mat-icon>search</mat-icon>\n        </button> -->\n  <button mat-icon-button aria-label=\"Example icon-button with a menu\">\n    <mat-icon>more_vert</mat-icon>\n  </button>\n</mat-toolbar>\n<div class=\"content\">\n  <span class=\"mat-caption\">\n    Options selected: {{alunos.selectedOptions.selected.length}}\n  </span>\n</div>\n<mat-selection-list #alunos class=\"no-padding\">\n  <mat-divider></mat-divider>\n  <mat-list-option>\n    Fernanda\n  </mat-list-option>\n  <mat-divider></mat-divider>\n  <mat-list-option>\n    Jenifer\n  </mat-list-option>\n  <mat-divider></mat-divider>\n  <mat-list-option>\n    Guilherme\n  </mat-list-option>\n  <mat-divider></mat-divider>\n</mat-selection-list>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\n// tslint:disable-next-line: max-line-length\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatRippleModule, MatNativeDateModule } from '@angular/material/core';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\nimport { CoursesComponent } from '../components/courses/courses.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { CourseComponent } from '../components/course/course.component';\nimport { NovaCourseComponent } from '../components/nova-course/nova-course.component';\nimport { ChamadasComponent } from '../components/course/chamadas/chamadas.component';\nimport { AlunosComponent } from '../components/course/alunos/alunos.component';\nimport { AdicionarAlunosComponent } from '../components/course/adicionar-alunos/adicionar-alunos.component';\nimport { ChamadaComponent } from '../components/course/chamada/chamada.component';\nimport { TesteComponent } from '../components/teste/teste.component';\n// import { GraphQLModule } from './graphql.module';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CoursesComponent,\n    CourseComponent,\n    NovaCourseComponent,\n    ChamadasComponent,\n    AlunosComponent,\n    AdicionarAlunosComponent,\n    ChamadaComponent,\n    TesteComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    ReactiveFormsModule,\n    AppRoutingModule,\n    HttpClientModule,\n// tslint:disable-next-line: max-line-length\n    MatButtonModule, MatCheckboxModule, MatToolbarModule,\n    MatIconModule, MatListModule, MatDividerModule,\n    MatCardModule, MatRippleModule, MatStepperModule,\n    MatFormFieldModule, MatInputModule, MatSlideToggleModule,\n    MatGridListModule, MatTabsModule, MatDatepickerModule,\n    MatNativeDateModule, MatExpansionModule, MatTooltipModule,\n    MatSnackBarModule, MatRadioModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"crnd\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-teste',\n  templateUrl: './teste.component.html',\n  styleUrls: ['./teste.component.css']\n})\nexport class TesteComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<p>teste works!</p>\n","import {Component, OnInit, Input} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport { FloatLabelType } from '@angular/material/core';\nimport { HttpGenericService } from 'src/app/services/http-generic.service';\nimport { first } from 'rxjs/operators';\nimport { MessengerService } from 'src/app/services/messenger.service';\n\n/**\n * @title Stepper vertical\n */\n@Component({\n  selector: 'nova-course-component',\n  templateUrl: 'nova-course.component.html',\n  styleUrls: ['nova-course.component.css']\n})\nexport class NovaCourseComponent implements OnInit {\n  isLinear = false;\n  formGroup: FormGroup;\n\n  @Input()\n  floatLabel: FloatLabelType;\n\n  constructor(\n    private _formBuilder: FormBuilder,\n    private _httpService: HttpGenericService,\n    private _messenger: MessengerService) {}\n\n  ngOnInit() {\n    this._httpService.initialize('course');\n\n    this.formGroup = this._formBuilder.group({\n      nomeCourse: ['', Validators.required]\n    });\n\n    this.floatLabel = 'always';\n  }\n\n  onSubmit() {\n\n    console.log('submited');\n\n    const novaCourse = {\n      nome: this.formGroup.controls.nomeCourse.value\n    };\n\n    console.log('novaCourse', novaCourse);\n\n    this._httpService.create(novaCourse)\n      .pipe(first())\n      .subscribe(\n        response => {\n          this._messenger.show('course adicionada');\n        },\n        error => {\n          this._messenger.show('ops! ocorreu algum erro');\n        });\n  }\n}\n","<mat-toolbar class=\"toolbar\" color=\"primary\">\n  <a [routerLink]=\"['/courses']\" mat-icon-button aria-label=\"Example icon-button with a menu\">\n    <mat-icon>arrow_back</mat-icon>\n  </a>\n  <span>Nova Course</span>\n</mat-toolbar>\n\n<!-- <button mat-raised-button (click)=\"isLinear = !isLinear\" id=\"toggle-linear\">\n  {{!isLinear ? 'Enable linear mode' : 'Disable linear mode'}}\n</button> -->\n<div class=\"content\">\n  <form [formGroup]=\"formGroup\" (ngSubmit)=\"onSubmit()\">\n    <mat-form-field [floatLabel]=\"floatLabel\">\n      <mat-label>Nome da course</mat-label>\n      <input matInput placeholder=\"Course C\" formControlName=\"nomeCourse\" required>\n    </mat-form-field>\n    <div>\n      <button type=\"submit\" mat-raised-button color=\"primary\" >Criar</button>\n    </div>\n  </form>\n</div>\n","import { Injectable } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessengerService {\n\n  constructor(private _snackBar: MatSnackBar) { }\n\n  public show(message: string) {\n    this._snackBar.open(message, '', { duration: 5000 });\n  }\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Aluno } from 'src/app/models/Aluno';\nimport { StoreService } from 'src/app/services/store.service';\nimport { Course } from 'src/app/models/Course';\n\n@Component({\n  selector: 'app-alunos',\n  templateUrl: './alunos.component.html',\n  styleUrls: ['./alunos.component.css']\n})\nexport class AlunosComponent implements OnInit {\n\n  @Input() alunos = new Array<Aluno>();\n\n  constructor(private _storeService: StoreService) {\n  }\n\n  ngOnInit() {\n    console.log(this._storeService.course.alunos);\n  }\n\n}\n","<mat-list class=\"no-padding\">\n  <ng-container *ngFor=\"let aluno of alunos\">\n    <mat-list-item>\n      <h3 matLine>{{aluno.nome}}</h3>\n      <button mat-icon-button color=\"primary\">\n        <mat-icon>edit</mat-icon>\n      </button>\n      <button mat-icon-button color=\"warn\">\n        <mat-icon>clear</mat-icon>\n      </button>\n    </mat-list-item>\n    <mat-divider></mat-divider>\n  </ng-container>\n</mat-list>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Course } from 'src/app/models/Course';\nimport { StoreService } from 'src/app/services/store.service';\n\n@Component({\n  selector: 'app-chamadas',\n  templateUrl: './chamadas.component.html',\n  styleUrls: ['./chamadas.component.css']\n})\nexport class ChamadasComponent implements OnInit {\n\n  course: Course;\n\n  constructor(private _storeService: StoreService) { }\n\n  ngOnInit() {\n    this.course = this._storeService.course;\n  }\n\n}\n","<div class=\"content\">\n  <!-- <section class=\"field\">\n      <button class=\"acoes\" [routerLink]=\"[ '/course/chamada']\" mat-raised-button color=\"primary\">Fazer chamada!</button>\n    </section> -->\n  <section class=\"field\">\n    <a [routerLink]=\"['chamada']\" class=\"acoes\" mat-raised-button color=\"primary\">Marcar presentes</a>\n  </section>\n  <section class=\"field\">\n    <a [routerLink]=\"['chamada']\" class=\"acoes\" mat-raised-button color=\"accent\">Desmarcar ausentes</a>\n  </section>\n</div>\n<mat-accordion>\n  <mat-expansion-panel>\n    <mat-expansion-panel-header>\n      <mat-panel-title>\n        Hoje\n      </mat-panel-title>\n      <!-- <mat-panel-description>\n            Type your name and age\n          </mat-panel-description> -->\n    </mat-expansion-panel-header>\n    <mat-list class=\"no-padding\">\n      <mat-divider></mat-divider>\n      <mat-list-item>\n        <h3 matLine>Aula x - 13:30</h3>\n        <button mat-icon-button color=\"primary\">\n          <mat-icon>edit</mat-icon>\n        </button>\n      </mat-list-item>\n      <mat-divider></mat-divider>\n      <mat-list-item>\n        <h3 matLine>Aula y - 15:07</h3>\n        <button mat-icon-button color=\"primary\">\n          <mat-icon>edit</mat-icon>\n        </button>\n      </mat-list-item>\n      <mat-divider></mat-divider>\n    </mat-list>\n  </mat-expansion-panel>\n  <mat-expansion-panel>\n    <mat-expansion-panel-header>\n      <mat-panel-title>\n        Recentes\n      </mat-panel-title>\n    </mat-expansion-panel-header>\n    <mat-list class=\"no-padding\">\n      <mat-divider></mat-divider>\n      <mat-list-item>\n        <h3 matLine>Aula x - 30/06 13:30</h3>\n        <button mat-icon-button color=\"primary\">\n          <mat-icon>edit</mat-icon>\n        </button>\n      </mat-list-item>\n      <mat-divider></mat-divider>\n      <mat-list-item>\n        <h3 matLine>Aula y - 30/06 15:07</h3>\n        <button mat-icon-button color=\"primary\">\n          <mat-icon>edit</mat-icon>\n        </button>\n      </mat-list-item>\n      <mat-divider></mat-divider>\n      <mat-list-item>\n        <h3 matLine>Aula y - 29/06 13:05</h3>\n        <button mat-icon-button color=\"primary\">\n          <mat-icon>edit</mat-icon>\n        </button>\n      </mat-list-item>\n      <mat-divider></mat-divider>\n      <mat-list-item>\n        <h3 matLine>Aula y - 29/06 15:07</h3>\n        <button mat-icon-button color=\"primary\">\n          <mat-icon>edit</mat-icon>\n        </button>\n      </mat-list-item>\n      <mat-divider></mat-divider>\n      <mat-list-item>\n        <h3 matLine>Aula y - 28/06 15:07</h3>\n        <button mat-icon-button color=\"primary\">\n          <mat-icon>edit</mat-icon>\n        </button>\n      </mat-list-item>\n      <mat-divider></mat-divider>\n    </mat-list>\n  </mat-expansion-panel>\n</mat-accordion>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'chamada';\n}\n","<router-outlet>\n</router-outlet>\n","export class Aluno {\r\n  id: string;\r\n  nome: string;\r\n  apelido: string;\r\n  email: string;\r\n  sexo: string;\r\n}\r\n","\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/startup/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}
