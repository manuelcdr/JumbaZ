{"version":3,"sources":["webpack:///src/app/models/Course.ts","webpack:///src/app/services/course-services.service.ts","webpack:///src/app/components/courses/courses.component.ts","webpack:///src/app/components/courses/courses.component.html","webpack:///src/environments/environment.ts","webpack:///src/app/components/course/course.component.ts","webpack:///src/app/components/course/course.component.html","webpack:///src/app/services/http-generic.service.ts","webpack:///src/app/services/store.service.ts","webpack:///src/app/components/course/adicionar-alunos/adicionar-alunos.component.ts","webpack:///src/app/components/course/adicionar-alunos/adicionar-alunos.component.html","webpack:///src/app/startup/app-routing.module.ts","webpack:///src/app/components/course/chamada/chamada.component.ts","webpack:///src/app/components/course/chamada/chamada.component.html","webpack:///src/app/startup/app.module.ts","webpack:///src/$_lazy_route_resource lazy namespace object","webpack:///src/app/components/teste/teste.component.ts","webpack:///src/app/components/teste/teste.component.html","webpack:///src/app/components/nova-course/nova-course.component.ts","webpack:///src/app/components/nova-course/nova-course.component.html","webpack:///src/app/services/messenger.service.ts","webpack:///src/app/components/course/alunos/alunos.component.ts","webpack:///src/app/components/course/alunos/alunos.component.html","webpack:///src/app/components/course/chamadas/chamadas.component.ts","webpack:///src/app/components/course/chamadas/chamadas.component.html","webpack:///src/app/startup/app.component.ts","webpack:///src/app/startup/app.component.html","webpack:///src/app/models/Aluno.ts","webpack:///src/main.ts"],"names":["Course","alunos","Array","CourseService","fields","id","providedIn","CoursesComponent","_httpService","_store","_router","_messenger","_courseService","courses","subscribe","result","course","console","log","nome","navigate","erro","show","selector","templateUrl","styleUrls","environment","production","API","url","CourseComponent","_route","_storeService","isLinear","panelOpenState","aluno","push","adicionarAlunoNaLista","HttpGenericService","httpClient","initialized","urlPath","urlCombined","path","get","pipe","response","data","obj","post","put","StoreService","local","objeto","localStorage","setItem","JSON","stringify","parse","getItem","getObject","addObject","AdicionarAlunosComponent","submitted","initialize","form","invalid","create","success","emit","error","resetForm","checked","courseId","onSubmit","habilitarLink","routes","component","children","redirectTo","AppRoutingModule","forRoot","imports","exports","ChamadaComponent","AppModule","declarations","providers","bootstrap","webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","TesteComponent","NovaCourseComponent","_formBuilder","formGroup","group","nomeCourse","required","floatLabel","novaCourse","controls","value","MessengerService","_snackBar","message","open","duration","AlunosComponent","ChamadasComponent","AppComponent","title","Aluno","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["import { Aluno } from './Aluno';\r\n\r\nexport class Course {\r\n  id: string;\r\n  nome: string;\r\n  alunos = new Array<Aluno>();\r\n}\r\n","import { Injectable } from '@angular/core';\n// import { Apollo, QueryRef } from 'apollo-angular';\n// import gql from 'graphql-tag';\nimport { Course } from '../models/Course';\nimport { map } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\n// import { GraphService } from './graph.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CourseService {\n\n  // defaultFields = ;\n\n  constructor(\n    // private _apollo: Apollo,\n    // private _graphqlService: GraphService\n    ) {\n  }\n\n\n  courses(fields = '{ id nome detalhes }'): Observable<Course[]> {\n    return null;\n    // return this._graphqlService.executeQuery(gql`{ courses ${fields} }`)\n    //   .pipe(map(result => result.data.courses));\n  }\n\n\n\n\n  course(id: string, fields = ''): Observable<Course> {\n\n    if (fields === '') {\n      fields = `\n      {\n        id\n        nome\n        detalhes\n        alunos {\n          id\n          nome\n          email\n        }\n      }\n    `;\n    }\n\n    return null;\n    // return this._graphqlService.executeQuery(gql`{ course(id: \"${id}\") ${fields} }`)\n    //   .pipe(map(result => result.data.course));\n  }\n\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { ThemePalette } from '@angular/material/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { HttpGenericService } from 'src/app/services/http-generic.service';\nimport { MessengerService } from 'src/app/services/messenger.service';\nimport { StoreService } from 'src/app/services/store.service';\nimport { Router } from '@angular/router';\nimport { Course } from 'src/app/models/Course';\nimport { CourseService } from 'src/app/services/course-services.service';\n\n@Component({\n  selector: 'app-courses',\n  templateUrl: './courses.component.html',\n  styleUrls: ['./courses.component.css']\n})\nexport class CoursesComponent implements OnInit {\n\n  courses = new Array<Course>();\n\n  constructor(\n    private _httpService: HttpGenericService,\n    private _store: StoreService,\n    private _router: Router,\n    private _messenger: MessengerService,\n    private _courseService: CourseService) { }\n\n  ngOnInit() {\n    // this._httpService.initialize('course');\n    // this._httpService.list().subscribe(\n    //   coursesResponse => this.courses = coursesResponse,\n    //   error => this._messenger.show('ops! ocorreu algum erro ao buscar as courses')\n    // );\n\n    this._courseService.courses().subscribe(result => {\n      this.courses = result;\n    });\n  }\n\n  selecionarCourse(course: Course) {\n    console.log('course', course.id, course.nome);\n\n    this._courseService.course(course.id).subscribe(\n      result => {\n        this._store.course = result;\n        console.log('vou navegar');\n        this._router.navigate([`/courses/${course.nome}`]);\n      },\n      erro => this._messenger.show('ops! ocorreu um erro ao buscar a course')\n    );\n\n    // this._httpService.getOne(course.id).subscribe(\n    //   responseCourse => { this._store.course = responseCourse; console.log('response', responseCourse); },\n    //   erro => this._messenger.show('ops! ocorreu um erro ao buscar a course'),\n    //   () => this._router.navigate([`/courses/${course.nome}`])\n    // );\n  }\n\n}\n","<mat-toolbar color=\"primary\">\n  <mat-toolbar-row>\n    <span>Courses</span>\n    <span class=\"flex-spacer\"></span>\n    <!-- <button mat-icon-button aria-label=\"Buscar menus\">\n      <mat-icon>search</mat-icon>\n    </button> -->\n    <button mat-icon-button aria-label=\"Example icon-button with a menu\">\n      <!-- <mat-icon>more_vert</mat-icon> -->\n    </button>\n  </mat-toolbar-row>\n</mat-toolbar>\n<mat-nav-list class=\"no-padding\" *ngFor=\"let course of courses\">\n  <mat-list-item (click)=\"selecionarCourse(course)\">{{course.nome}}</mat-list-item>\n  <!-- <mat-divider></mat-divider> -->\n</mat-nav-list>\n\n\n<a [routerLink]=\"['/nova-course']\" class=\"btn-float\" mat-fab aria-label=\"Example icon-button with a heart icon\">\n  <mat-icon>add</mat-icon>\n</a>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  API: {\n    url: 'https://localhost:44323/api'\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { FloatLabelType } from '@angular/material/core';\nimport { HttpGenericService } from 'src/app/services/http-generic.service';\nimport { Course } from 'src/app/models/Course';\nimport { MessengerService } from 'src/app/services/messenger.service';\nimport { Aluno } from 'src/app/models/Aluno';\nimport { StoreService } from 'src/app/services/store.service';\nimport { CourseService } from 'src/app/services/course-services.service';\n\n@Component({\n  selector: 'app-course',\n  templateUrl: './course.component.html',\n  styleUrls: ['./course.component.scss']\n})\nexport class CourseComponent implements OnInit {\n  isLinear = false;\n  panelOpenState = false;\n  formGroupAdicionar: FormGroup;\n  course = new Course();\n\n  constructor(\n    private _route: ActivatedRoute,\n    private _httpService: HttpGenericService,\n    private _storeService: StoreService,\n    private _messenger: MessengerService,\n    private _courseService: CourseService) { }\n\n  ngOnInit() {\n    // const courseId = this._route.snapshot.paramMap.get('id');\n    // this._httpService.initialize('course');\n    this.course = this._storeService.course;\n    // this._httpService.getOne(courseId).subscribe(\n    //   courseResponse => {\n    //     this.course = courseResponse as Course;\n    //     console.log('course', this._storeService.course);\n    //   },\n    //   error => this._messenger.show('ops! ocorreu algum erro ao buscar a course'));\n\n    // this._courseService.course(courseId).subscribe(result => this.course = result);\n  }\n\n  adicionarAlunoNaLista(aluno: Aluno) {\n    this.course.alunos.push(aluno);\n    this._storeService.course = this.course;\n  }\n\n}\n","<mat-toolbar class=\"toolbar\" color=\"primary\">\n  <a [routerLink]=\"['/courses']\" mat-icon-button aria-label=\"Example icon-button with a menu\">\n    <mat-icon>arrow_back</mat-icon>\n  </a>\n  <span>{{course.nome}}</span>\n  <span class=\"flex-spacer\"></span>\n  <!-- <button mat-icon-button aria-label=\"Buscar menus\">\n        <mat-icon>search</mat-icon>\n      </button> -->\n  <button mat-icon-button aria-label=\"Example icon-button with a menu\">\n    <mat-icon>more_vert</mat-icon>\n  </button>\n</mat-toolbar>\n<mat-tab-group class=\"tab-toolbar\" backgroundColor=\"primary\">\n  <mat-tab label=\"Chamada\">\n    <app-chamadas></app-chamadas>\n  </mat-tab>\n  <mat-tab label=\"Alunos\">\n    <app-alunos [alunos]=\"course.alunos\" ></app-alunos>\n  </mat-tab>\n  <mat-tab label=\"Adicionar\">\n    <app-adicionar-alunos [courseId]=\"course.nome\" (adicionarAlunoNaLista)=\"adicionarAlunoNaLista($event)\">\n    </app-adicionar-alunos>\n  </mat-tab>\n</mat-tab-group>\n","import { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map, first } from 'rxjs/operators';\nimport { ApiResponse } from '../models/ApiResponse';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpGenericService {\n\n  private initialized = false;\n  private url = `${environment.API.url}`;\n  private urlPath = '';\n  private urlCombined = '';\n\n  constructor(private httpClient: HttpClient) { }\n\n  initialize(path: string){\n    this.urlPath = path;\n    this.urlCombined = `${this.url}/${this.urlPath}`;\n    this.initialized = true;\n  }\n\n  getOne(id: string): Observable<any> {\n    if (!this.initialized) { return; }\n    return this.httpClient.get(`${this.urlCombined}/${id}`)\n      .pipe(\n        map<ApiResponse, any>(response => response.data)\n      );\n  }\n\n  list(): Observable<any[]> {\n    if (!this.initialized) { return; }\n    return this.httpClient.get(this.urlCombined)\n      .pipe(\n        map<ApiResponse, any[]>(response => response.data)\n      );\n  }\n\n  create(obj: any): Observable<ApiResponse> {\n    if (!this.initialized) { return; }\n    return this.httpClient.post<ApiResponse>(this.urlCombined, obj);\n  }\n\n  update(id: string, obj: any): Observable<ApiResponse> {\n    if (!this.initialized) { return; }\n    return this.httpClient.put<ApiResponse>(`${this.urlCombined}/${id}`, obj);\n  }\n\n  delete(id: string): Observable<ApiResponse> {\n    if (!this.initialized) { return; }\n    return this.httpClient.delete<any>(`${this.urlCombined}/${id}`);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Course } from '../models/Course';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StoreService {\n\n  constructor() { }\n\n  get course(): Course {\n    return this.getObject('current-course') as Course;\n  }\n\n  set course(course: Course) {\n    this.addObject('current-course', course);\n  }\n\n  private addObject(local: string, objeto: any) {\n    localStorage.setItem(local, JSON.stringify(objeto));\n  }\n\n  private getObject(local: string): any {\n    return JSON.parse(localStorage.getItem(local));\n  }\n}\n","import { Component, OnInit, Output, AfterViewChecked, EventEmitter, AfterViewInit, Input } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { MessengerService } from 'src/app/services/messenger.service';\nimport { HttpGenericService } from 'src/app/services/http-generic.service';\nimport { Aluno } from 'src/app/models/Aluno';\nimport { StoreService } from 'src/app/services/store.service';\n\n@Component({\n  selector: 'app-adicionar-alunos',\n  templateUrl: './adicionar-alunos.component.html',\n  styleUrls: ['./adicionar-alunos.component.css']\n})\nexport class AdicionarAlunosComponent implements OnInit {\n\n  @Input('courseId')\n  set courseId(courseId: string) {\n    console.log('courseId', courseId);\n    this.aluno = new Aluno();\n  }\n\n  @Output() adicionarAlunoNaLista = new EventEmitter();\n\n  submitted = false;\n  aluno = new Aluno();\n\n  constructor(\n    private _httpService: HttpGenericService,\n    private _storeService: StoreService,\n    private _messenger: MessengerService) { }\n\n  ngOnInit() {\n    this._httpService.initialize('aluno');\n    this.aluno = new Aluno();\n  }\n\n  onSubmit(form: NgForm) {\n    this.submitted = true;\n\n    if (form.invalid) {\n      return;\n    }\n\n    this._httpService.create(this.aluno).subscribe(\n      response => {\n        if (response.success) {\n          this._messenger.show(`Aluno(a) ${this.aluno.nome} adicionado a course!`);\n          this.adicionarAlunoNaLista.emit(response.data as Aluno);\n        }\n      },\n      error => this._messenger.show('ops! ocorreu algum erro ao tentar adicionar o aluno.'),\n      () => form.resetForm()\n    );\n  }\n\n  habilitarLink(checked: boolean) {\n    if (checked) {\n      this._messenger.show('Link copiado e habilitado para compartilhamento. O link é acessível somente enquanto habilitado');\n    }\n  }\n}\n","<div class=\"content\">\n  <form #f=\"ngForm\" (ngSubmit)=\"onSubmit(f)\">\n    <mat-slide-toggle #slider (change)=\"habilitarLink(slider.checked)\">Habilitar e copiar link!</mat-slide-toggle>\n    <mat-form-field>\n      <!-- <mat-label>Link de cadastro do aluno</mat-label> -->\n      <input matInput matTooltip=\"Copiar\" value=\"http://chamada.com.br/354/courses/158\" readonly>\n      <!-- <button mat-raised-button>\n          <mat-icon matTooltip=\"Copiar\" [matTooltipPosition]=\"before\" matRipple matSuffix color=\"primary\">file_copy\n          </mat-icon>\n        </button> -->\n      <!-- <button matSuffix mat-raised-button  color=\"primary\">Copiar</button> -->\n    </mat-form-field>\n    <span class=\"mat-caption\">\n      Compartilhe este link com seus alunos para que eles se auto cadastrem na sua course.\n      É simples e rápido! (não requer login) <br>\n    </span>\n    <br>\n    <section>\n      <span class=\"mat-caption\">\n        Ou você mesmo pode cadastra-lo(a):<br>\n      </span>\n    </section>\n    <mat-form-field>\n      <mat-label>Nome do aluno(a)</mat-label>\n      <input matInput [(ngModel)]=\"aluno.nome\" name=\"nomeAluno\" required>\n    </mat-form-field>\n    <mat-form-field>\n      <mat-label>Apelido</mat-label>\n      <input matInput [(ngModel)]=\"aluno.apelido\" name=\"apelido\">\n    </mat-form-field>\n    <mat-radio-group [(ngModel)]=\"aluno.sexo\" name=\"sexo\" aria-label=\"Sexo\">\n      <mat-radio-button name=\"sexo\" value=\"Masculino\">Masculino</mat-radio-button>\n      <mat-radio-button name=\"sexo\" value=\"Feminino\">Feminino</mat-radio-button>\n    </mat-radio-group>\n    <div class=\"flex\">\n      <button mat-raised-button matRipple color=\"primary\" type=\"submit\">Adicionar</button>\n      <span class=\"flex-spacer\"></span>\n    </div>\n  </form>\n</div>\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { CoursesComponent } from '../components/courses/courses.component';\r\nimport { CourseComponent } from '../components/course/course.component';\r\nimport { NovaCourseComponent } from '../components/nova-course/nova-course.component';\r\nimport { AppComponent } from './app.component';\r\nimport { ChamadaComponent } from '../components/course/chamada/chamada.component';\r\nimport { TesteComponent } from '../components/teste/teste.component';\r\n\r\nconst routes: Routes = [\r\n  // Site routes goes here\r\n  {\r\n    path: '', component: AppComponent,\r\n    children: [\r\n      { path: 'courses', component: CoursesComponent },\r\n      { path: 'nova-course', component: NovaCourseComponent },\r\n      { path: 'courses/:nome', component: CourseComponent },\r\n      { path: 'courses/:nome/chamada', component: ChamadaComponent }\r\n    ]\r\n  },\r\n  { path: '**', redirectTo: '' }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\nimport { HttpGenericService } from 'src/app/services/http-generic.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { MessengerService } from 'src/app/services/messenger.service';\nimport { Course } from 'src/app/models/Course';\nimport { StoreService } from 'src/app/services/store.service';\n\n@Component({\n  selector: 'app-chamada',\n  templateUrl: './chamada.component.html',\n  styleUrls: ['./chamada.component.css']\n})\nexport class ChamadaComponent implements OnInit {\n\n  course: Course;\n\n  constructor(\n    private _route: ActivatedRoute,\n    private _httpService: HttpGenericService,\n    private _storeService: StoreService,\n    private _messenger: MessengerService) { }\n\n  ngOnInit() {\n    this.course = this._storeService.course;\n  }\n\n}\n","<mat-toolbar class=\"toolbar\" color=\"primary\">\n  <a [routerLink]=\"['/course']\" mat-icon-button aria-label=\"Example icon-button with a menu\">\n    <mat-icon>arrow_back</mat-icon>\n  </a>\n  <span>Course A</span>\n  <span class=\"flex-spacer\"></span>\n  <!-- <button mat-icon-button aria-label=\"Buscar menus\">\n          <mat-icon>search</mat-icon>\n        </button> -->\n  <button mat-icon-button aria-label=\"Example icon-button with a menu\">\n    <mat-icon>more_vert</mat-icon>\n  </button>\n</mat-toolbar>\n<div class=\"content\">\n  <span class=\"mat-caption\">\n    Options selected: {{alunos.selectedOptions.selected.length}}\n  </span>\n</div>\n<mat-selection-list #alunos class=\"no-padding\">\n  <mat-divider></mat-divider>\n  <mat-list-option>\n    Fernanda\n  </mat-list-option>\n  <mat-divider></mat-divider>\n  <mat-list-option>\n    Jenifer\n  </mat-list-option>\n  <mat-divider></mat-divider>\n  <mat-list-option>\n    Guilherme\n  </mat-list-option>\n  <mat-divider></mat-divider>\n</mat-selection-list>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\n// tslint:disable-next-line: max-line-length\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatRippleModule, MatNativeDateModule } from '@angular/material/core';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\nimport { CoursesComponent } from '../components/courses/courses.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { CourseComponent } from '../components/course/course.component';\nimport { NovaCourseComponent } from '../components/nova-course/nova-course.component';\nimport { ChamadasComponent } from '../components/course/chamadas/chamadas.component';\nimport { AlunosComponent } from '../components/course/alunos/alunos.component';\nimport { AdicionarAlunosComponent } from '../components/course/adicionar-alunos/adicionar-alunos.component';\nimport { ChamadaComponent } from '../components/course/chamada/chamada.component';\nimport { TesteComponent } from '../components/teste/teste.component';\n// import { GraphQLModule } from './graphql.module';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CoursesComponent,\n    CourseComponent,\n    NovaCourseComponent,\n    ChamadasComponent,\n    AlunosComponent,\n    AdicionarAlunosComponent,\n    ChamadaComponent,\n    TesteComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    ReactiveFormsModule,\n    AppRoutingModule,\n    HttpClientModule,\n// tslint:disable-next-line: max-line-length\n    MatButtonModule, MatCheckboxModule, MatToolbarModule,\n    MatIconModule, MatListModule, MatDividerModule,\n    MatCardModule, MatRippleModule, MatStepperModule,\n    MatFormFieldModule, MatInputModule, MatSlideToggleModule,\n    MatGridListModule, MatTabsModule, MatDatepickerModule,\n    MatNativeDateModule, MatExpansionModule, MatTooltipModule,\n    MatSnackBarModule, MatRadioModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"crnd\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-teste',\n  templateUrl: './teste.component.html',\n  styleUrls: ['./teste.component.css']\n})\nexport class TesteComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<p>teste works!</p>\n","import {Component, OnInit, Input} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport { FloatLabelType } from '@angular/material/core';\nimport { HttpGenericService } from 'src/app/services/http-generic.service';\nimport { first } from 'rxjs/operators';\nimport { MessengerService } from 'src/app/services/messenger.service';\n\n/**\n * @title Stepper vertical\n */\n@Component({\n  selector: 'nova-course-component',\n  templateUrl: 'nova-course.component.html',\n  styleUrls: ['nova-course.component.css']\n})\nexport class NovaCourseComponent implements OnInit {\n  isLinear = false;\n  formGroup: FormGroup;\n\n  @Input()\n  floatLabel: FloatLabelType;\n\n  constructor(\n    private _formBuilder: FormBuilder,\n    private _httpService: HttpGenericService,\n    private _messenger: MessengerService) {}\n\n  ngOnInit() {\n    this._httpService.initialize('course');\n\n    this.formGroup = this._formBuilder.group({\n      nomeCourse: ['', Validators.required]\n    });\n\n    this.floatLabel = 'always';\n  }\n\n  onSubmit() {\n\n    console.log('submited');\n\n    const novaCourse = {\n      nome: this.formGroup.controls.nomeCourse.value\n    };\n\n    console.log('novaCourse', novaCourse);\n\n    this._httpService.create(novaCourse)\n      .pipe(first())\n      .subscribe(\n        response => {\n          this._messenger.show('course adicionada');\n        },\n        error => {\n          this._messenger.show('ops! ocorreu algum erro');\n        });\n  }\n}\n","<mat-toolbar class=\"toolbar\" color=\"primary\">\n  <a [routerLink]=\"['/courses']\" mat-icon-button aria-label=\"Example icon-button with a menu\">\n    <mat-icon>arrow_back</mat-icon>\n  </a>\n  <span>Nova Course</span>\n</mat-toolbar>\n\n<!-- <button mat-raised-button (click)=\"isLinear = !isLinear\" id=\"toggle-linear\">\n  {{!isLinear ? 'Enable linear mode' : 'Disable linear mode'}}\n</button> -->\n<div class=\"content\">\n  <form [formGroup]=\"formGroup\" (ngSubmit)=\"onSubmit()\">\n    <mat-form-field [floatLabel]=\"floatLabel\">\n      <mat-label>Nome da course</mat-label>\n      <input matInput placeholder=\"Course C\" formControlName=\"nomeCourse\" required>\n    </mat-form-field>\n    <div>\n      <button type=\"submit\" mat-raised-button color=\"primary\" >Criar</button>\n    </div>\n  </form>\n</div>\n","import { Injectable } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessengerService {\n\n  constructor(private _snackBar: MatSnackBar) { }\n\n  public show(message: string) {\n    this._snackBar.open(message, '', { duration: 5000 });\n  }\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Aluno } from 'src/app/models/Aluno';\nimport { StoreService } from 'src/app/services/store.service';\nimport { Course } from 'src/app/models/Course';\n\n@Component({\n  selector: 'app-alunos',\n  templateUrl: './alunos.component.html',\n  styleUrls: ['./alunos.component.css']\n})\nexport class AlunosComponent implements OnInit {\n\n  @Input() alunos = new Array<Aluno>();\n\n  constructor(private _storeService: StoreService) {\n  }\n\n  ngOnInit() {\n    console.log(this._storeService.course.alunos);\n  }\n\n}\n","<mat-list class=\"no-padding\">\n  <ng-container *ngFor=\"let aluno of alunos\">\n    <mat-list-item>\n      <h3 matLine>{{aluno.nome}}</h3>\n      <button mat-icon-button color=\"primary\">\n        <mat-icon>edit</mat-icon>\n      </button>\n      <button mat-icon-button color=\"warn\">\n        <mat-icon>clear</mat-icon>\n      </button>\n    </mat-list-item>\n    <mat-divider></mat-divider>\n  </ng-container>\n</mat-list>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Course } from 'src/app/models/Course';\nimport { StoreService } from 'src/app/services/store.service';\n\n@Component({\n  selector: 'app-chamadas',\n  templateUrl: './chamadas.component.html',\n  styleUrls: ['./chamadas.component.css']\n})\nexport class ChamadasComponent implements OnInit {\n\n  course: Course;\n\n  constructor(private _storeService: StoreService) { }\n\n  ngOnInit() {\n    this.course = this._storeService.course;\n  }\n\n}\n","<div class=\"content\">\n  <!-- <section class=\"field\">\n      <button class=\"acoes\" [routerLink]=\"[ '/course/chamada']\" mat-raised-button color=\"primary\">Fazer chamada!</button>\n    </section> -->\n  <section class=\"field\">\n    <a [routerLink]=\"['chamada']\" class=\"acoes\" mat-raised-button color=\"primary\">Marcar presentes</a>\n  </section>\n  <section class=\"field\">\n    <a [routerLink]=\"['chamada']\" class=\"acoes\" mat-raised-button color=\"accent\">Desmarcar ausentes</a>\n  </section>\n</div>\n<mat-accordion>\n  <mat-expansion-panel>\n    <mat-expansion-panel-header>\n      <mat-panel-title>\n        Hoje\n      </mat-panel-title>\n      <!-- <mat-panel-description>\n            Type your name and age\n          </mat-panel-description> -->\n    </mat-expansion-panel-header>\n    <mat-list class=\"no-padding\">\n      <mat-divider></mat-divider>\n      <mat-list-item>\n        <h3 matLine>Aula x - 13:30</h3>\n        <button mat-icon-button color=\"primary\">\n          <mat-icon>edit</mat-icon>\n        </button>\n      </mat-list-item>\n      <mat-divider></mat-divider>\n      <mat-list-item>\n        <h3 matLine>Aula y - 15:07</h3>\n        <button mat-icon-button color=\"primary\">\n          <mat-icon>edit</mat-icon>\n        </button>\n      </mat-list-item>\n      <mat-divider></mat-divider>\n    </mat-list>\n  </mat-expansion-panel>\n  <mat-expansion-panel>\n    <mat-expansion-panel-header>\n      <mat-panel-title>\n        Recentes\n      </mat-panel-title>\n    </mat-expansion-panel-header>\n    <mat-list class=\"no-padding\">\n      <mat-divider></mat-divider>\n      <mat-list-item>\n        <h3 matLine>Aula x - 30/06 13:30</h3>\n        <button mat-icon-button color=\"primary\">\n          <mat-icon>edit</mat-icon>\n        </button>\n      </mat-list-item>\n      <mat-divider></mat-divider>\n      <mat-list-item>\n        <h3 matLine>Aula y - 30/06 15:07</h3>\n        <button mat-icon-button color=\"primary\">\n          <mat-icon>edit</mat-icon>\n        </button>\n      </mat-list-item>\n      <mat-divider></mat-divider>\n      <mat-list-item>\n        <h3 matLine>Aula y - 29/06 13:05</h3>\n        <button mat-icon-button color=\"primary\">\n          <mat-icon>edit</mat-icon>\n        </button>\n      </mat-list-item>\n      <mat-divider></mat-divider>\n      <mat-list-item>\n        <h3 matLine>Aula y - 29/06 15:07</h3>\n        <button mat-icon-button color=\"primary\">\n          <mat-icon>edit</mat-icon>\n        </button>\n      </mat-list-item>\n      <mat-divider></mat-divider>\n      <mat-list-item>\n        <h3 matLine>Aula y - 28/06 15:07</h3>\n        <button mat-icon-button color=\"primary\">\n          <mat-icon>edit</mat-icon>\n        </button>\n      </mat-list-item>\n      <mat-divider></mat-divider>\n    </mat-list>\n  </mat-expansion-panel>\n</mat-accordion>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'chamada';\n}\n","<router-outlet>\n</router-outlet>\n","export class Aluno {\r\n  id: string;\r\n  nome: string;\r\n  apelido: string;\r\n  email: string;\r\n  sexo: string;\r\n}\r\n","\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/startup/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}
